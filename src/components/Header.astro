---
import MoonLight from '../assets/Moon_fill_light.svg'
import Sun from '../assets/Sun_fill.svg'
import Monnfill from '../assets/Moon_fill.svg'
import Logo from './Logo.astro'
import Hamburguer from '../assets/hamburger-button.svg'
import Close from '../assets/close-button.svg'

const NavItems = [
    { href: '/', text: 'About us' },
    { href: '/Product', text: 'Product' },
    { href: '/Resource', text: 'Resource' },
    { href: '/Contact', text: 'Contact' },
]
---
<div id="header" class="flex justify-between items-center p-4 text-[#223344] dark:text-[#FFFFFF] relative">
    <Logo/>
    <button id="menuToggle" class="md:hidden block menu-icon relative dark:invert">
        <img src={Hamburguer.src} alt="Close Button" class="w-6 h-6 block">
        <img src={Close.src} alt="Close Button" class="w-6 h-6 hidden">
    </button>
    <nav id="navMenu" class="hidden md:flex-row md:flex md:gap-8 bg-[#F2F9FE] dark:bg-[#111729] md:p-0 transition-colors duration-500 md:top-0 md:relative absolute top-[64px] right-0 p-5 md:w-fit w-2/3 navbg">
        
        <ul class="flex flex-col md:flex-row md:text-base text-xl gap-8 items-center">
            {NavItems.map((Nav, index) => (
                <li class={`font-semibold list-none ${index === 0 ? 'active' : ''}`}>
                    <a class="dark:text-[#FFFFFF] dark:before:bg-[#FFFFFF]" href={Nav.href}>
                        {Nav.text}
                    </a>
                </li>
            ))}
        </ul>
        <button id="themeTogglemobile"
        class="p-3 bg-[#111729] dark:bg-[#223344] rounded-full flex gap-4 relative items-center z-10 transition-all duration-300 md:hidden mt-8 mx-auto"
        >
            <div class="bg-[#FFFFFF] size-9 rounded-full absolute right-0 dark:-translate-x-full dark:m-2
            m-1.5 z-20 transition-all duration-500"></div>
            <div class="z-30 absolute dark:opacity-100 transition-opacity duration-300"><img src={Monnfill.src} alt=""></div>
            <div class="z-30 dark:opacity-0 transition-opacity duration-300"><img src={MoonLight.src} alt=""></div>
            <div class="z-30 dark:invert transition-opacity duration-300"><img src={Sun.src} alt=""></div>
        </button>
    </nav>
    <button id="themeToggle"
        class="p-3 bg-[#111729] dark:bg-[#223344] rounded-full md:flex gap-4 relative items-center z-10 transition-all duration-300 hidden"
        >
        <div class="bg-[#FFFFFF] size-9 rounded-full absolute right-0 dark:-translate-x-full dark:m-2
        m-1.5 z-20 transition-all duration-500"></div>
        <div class="z-30 absolute dark:opacity-100 transition-opacity duration-300"><img src={Monnfill.src} alt=""></div>
        <div class="z-30 dark:opacity-0 transition-opacity duration-300"><img src={MoonLight.src} alt=""></div>
        <div class="z-30 dark:invert transition-opacity duration-300"><img src={Sun.src} alt=""></div>
    </button>
</div>
<style is:global>
    #themeToggle {
        cursor: pointer;
    }
    .active a{
        border: #2A4DD0;
    }
    a{
        color: #2A4DD0;
    }
    li{
        position: relative;
    }
    li::before{
        content: '';
        position: absolute;
        width: 0%;
        height: 2px;
        bottom: 0;
        left: 0;
        background-color: #2A4DD0;
        transition: all 0.3s ease-in-out;
    }
    .dark li, .dark .active{
        color: #FFFFFF;
    }
    li:hover::before{
        background-color: #2A4DD0;
        width: 100%;
    }
    li.active::before{
        background-color: #2A4DD0;
        width: 100%;
    }
    @media (max-width: 768px){
        .navbg{
            height: calc(100vh - 64px);
        }
    }
</style>
<script is:inline>
    const theme = (() => {
        if (typeof localStorage !== 'undefined' &&  localStorage.getItem('theme')) {return   localStorage.getItem('theme')
        }
        if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
            return 'dark'
        }
            return 'light'
    })();
    if (theme === 'light') {
        document.documentElement.classList.remove('dark')
    } else {
        document.documentElement.classList.add('dark')
    }
    window.localStorage.setItem('theme', theme);

    const handleToggleClick = () => {
        const element = document.documentElement;
        element.classList.toggle("dark");
        const isDark = element.classList.contains("dark");
        localStorage.setItem("theme", isDark ? "dark" : "light");
    }
    document.getElementById("themeToggle").addEventListener("click", handleToggleClick);
    document.getElementById("themeTogglemobile").addEventListener("click", handleToggleClick);
    const menuToggle = document.getElementById("menuToggle");
    const navMenu = document.getElementById("navMenu");

    let isMenuOpen = false;

    menuToggle.addEventListener("click", () => {
        isMenuOpen = !isMenuOpen;
        navMenu.classList.toggle("hidden", !isMenuOpen);
        const hamburgerIcon = menuToggle.querySelector("img[src*='hamburger-button']");
        const closeIcon = menuToggle.querySelector("img[src*='close-button']");
        hamburgerIcon.classList.toggle("hidden", isMenuOpen);
        closeIcon.classList.toggle("hidden", !isMenuOpen);
        // menuToggle.querySelector(".menu-icon").classList.toggle("open", isMenuOpen);
    });
</script>